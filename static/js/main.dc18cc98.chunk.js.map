{"version":3,"sources":["components/userName.js","components/serachCard.js","actions/userAction.js","actions/searchListAction.js","App.js","reducers/index.js","reducers/userReducer.js","reducers/searchListReducer.js","store.js","serviceWorker.js","index.js"],"names":["UserName","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchText","openSearchResult","data","value","upDateData","bind","assertThisInitialized","openSearch","selectedName","props","dispatch","type","axios","get","then","response","payload","catch","err","e","user","text","target","setState","filteredUser","filter","username","toLowerCase","includes","console","log","name","_this2","_this$props","searchList","_this$state","react_default","a","createElement","className","lib","minLength","debounceTimeout","placeholder","onChange","_","map","key","uuidv4","onClick","withRouter","connect","store","App","BrowserRouter","components_userName","combineReducers","arguments","length","undefined","fetching","fetched","error","action","objectSpread","middleware","applyMiddleware","promise","thunk","createLogger","createStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc18cc98.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './userName.css';\nimport { user } from '../actions/userAction';\nimport { DebounceInput } from 'react-debounce-input';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { searchList } from '../actions/searchListAction'\nimport uuidv4 from 'uuid/v4';\nimport _ from 'lodash';\nimport SearchCard from './serachCard'\n\n\nclass UserName extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchText: '',\n            openSearchResult: false,\n            data: {},\n            value: ''\n        }\n        this.upDateData = this.upDateData.bind(this);\n        this.openSearch = this.openSearch.bind(this);\n        this.selectedName = this.selectedName.bind(this);\n\n    }\n\n    componentWillMount() {\n        this.props.dispatch(user());\n    }\n\n\n\n    upDateData(e) {\n        let text = this.state.searchText;\n        text = e.target.value;\n        this.setState({ searchText: text, value: text });\n        this.props.dispatch(searchList(this.props.user, this.state.searchText));\n        this.openSearch();\n    }\n\n    openSearch() {\n        this.setState({ openSearchResult: true })\n    }\n\n    selectedName(name) {\n        this.setState({ value: name })\n        this.setState({ openSearchResult: false })\n    }\n\n    render() {\n        const { user, searchList } = this.props;\n        const { data, openSearchResult, value } = this.state;\n\n        return (\n            <div className=\"App\">\n                <p>Enter User Name:</p>\n                <form className=\"user-form\">\n                    <div className=\"input-field\">\n                        <div className=\"autocomplete\">\n                            <DebounceInput minLength={1} debounceTimeout={500} type=\"text\" placeholder=\"User Name\" value={value} onChange={(e) => this.upDateData(e)} />\n                        </div>\n                        <input type=\"submit\" />\n                    </div>\n                    {\n                        openSearchResult ? (\n                            <div className=\"user-list\">\n                                {\n                                    _.map(searchList, (user) => (\n                                        <div key={uuidv4()} >\n                                            <div className=\"name\" onClick={() => this.selectedName(user.username)}>\n                                                {user.username}\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        ) : ''\n                    }\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(connect((store) => {\n    console.log(store)\n    return {\n        user: store.user.user,\n        searchList: store.searchList.searchList\n    };\n})(UserName))\n\n","import React, { Component } from 'react';\n\nclass SearchCard extends Component {\n    render() {\n        const { title, data, filmData } = this.props;\n\n        return (\n            <div>\n                <div className=\"name\">\n                    {data.username}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchCard;\n","import axios from \"axios\";\n\nexport function user() {\n    return function (dispatch) {\n        dispatch({ type: \"USER\" });\n        axios.get('http://jsonplaceholder.typicode.com/users')\n            .then((response) => {\n                dispatch({ type: \"USER_FULFILLED\", payload: response.data })\n            })\n            .catch((err) => {\n                dispatch({ type: \"USER_REJECTED\", payload: err.response })\n            })\n    }\n}\n\n","import axios from \"axios\";\n\nexport function searchList(user, searchText) {\n    return function (dispatch) {\n        var filteredUser = user.filter(user => {\n            return user.username.toLowerCase().includes(searchText.toLowerCase())\n        })\n        dispatch({ type: \"SEARCH_LIST\", payload: filteredUser });\n        console.log(filteredUser)\n    }\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserName from './components/userName'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <UserName />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\"\nimport user from \"./userReducer\"\nimport searchList from \"./searchListReducer\"\n\nexport default combineReducers({\n    user,\n    searchList\n})","export default function reducer(state = {\n    user: [],\n    fetching: false,\n    fetched: false,\n    error: null,\n}, action) {\n\n    switch (action.type) {\n        case \"USER\": {\n            return { ...state, fetching: true }\n        }\n        case \"USER_REJECTED\": {\n            return { ...state, fetching: false, error: action.payload }\n        }\n        case \"USER_FULFILLED\": {\n            return {\n                ...state,\n                fetching: false,\n                fetched: true,\n                user: action.payload,\n            }\n        }\n    }\n\n    return state\n}\n","export default function reducer(state = {\n    searchList: [],\n    fetching: false,\n    fetched: false,\n    error: null,\n}, action) {\n    switch (action.type) {\n        case \"SEARCH_LIST\": {\n            return { ...state, fetching: true, searchList: action.payload }\n        }\n    }\n\n    return state\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport promise from \"redux-promise-middleware\";\nimport thunk from \"redux-thunk\"\nimport { createLogger } from \"redux-logger\";\n\nimport reducer from \"./reducers\";\nconst middleware = applyMiddleware(promise(), thunk, createLogger());\nexport default createStore(reducer, middleware);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./store\"\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}